// Generated by CoffeeScript 1.6.1
(function() {
  var MetricCollector,
    _this = this;

  MetricCollector = (function() {

    function MetricCollector(graphite, collectables) {
      var _this = this;
      this.graphite = graphite;
      this.collectables = collectables;
      this.collect = function() {
        return MetricCollector.prototype.collect.apply(_this, arguments);
      };
      this.beginPolling = function(interval) {
        return MetricCollector.prototype.beginPolling.apply(_this, arguments);
      };
    }

    MetricCollector.prototype.beginPolling = function(interval) {
      console.log("Will collect metrics every " + interval + " millis");
      return setTimeout(this.collect, interval);
    };

    MetricCollector.prototype.collect = function() {
      var collectable, _i, _len, _ref, _results;
      _ref = this.collectables;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        collectable = _ref[_i];
        _results.push(collectable.collectMetrics(this.graphite));
      }
      return _results;
    };

    return MetricCollector;

  })();

  module.exports = MetricCollector;

}).call(this);
