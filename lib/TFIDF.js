// Generated by CoffeeScript 1.6.1
(function() {
  var TFIDF, _;

  _ = require('underscore');

  TFIDF = (function() {

    function TFIDF(tweetCounts) {
      this.tweetCounts = tweetCounts;
    }

    TFIDF.prototype.ngramsForRegionOrderedByScore = function(region, callback) {
      var _this = this;
      return this.tweetCounts.countRegions(function(totalRegionCount) {
        return _this.tweetCounts.ngramCountsForRegion(region, function(forRegion) {
          var entry, numNGrams, regionCountForNGram, returned, _i, _len, _results;
          numNGrams = forRegion.length;
          returned = 0;
          regionCountForNGram = {};
          _results = [];
          for (_i = 0, _len = forRegion.length; _i < _len; _i++) {
            entry = forRegion[_i];
            _results.push(_this.tweetCounts.countRegionsInWhichNGramOccurs(entry.ngram, function(result) {
              var idf, ngramsWithCountAndTFIDF, tf, _j, _len1;
              returned += 1;
              regionCountForNGram[result.ngram] = result.regions;
              if (returned === numNGrams) {
                ngramsWithCountAndTFIDF = [];
                for (_j = 0, _len1 = forRegion.length; _j < _len1; _j++) {
                  entry = forRegion[_j];
                  tf = entry.tweets;
                  idf = Math.log(totalRegionCount / regionCountForNGram[entry.ngram]);
                  entry = {
                    ngram: entry.ngram,
                    tweets: entry.tweets,
                    tf: tf,
                    idf: idf,
                    tf_idf: tf * idf
                  };
                  ngramsWithCountAndTFIDF.push(entry);
                }
                return callback(_.chain(ngramsWithCountAndTFIDF).sortBy(function(d) {
                  return -1 * d.tf_idf;
                }).value());
              }
            }));
          }
          return _results;
        });
      });
    };

    return TFIDF;

  })();

  module.exports = TFIDF;

}).call(this);
