// Generated by CoffeeScript 1.6.1
(function() {
  var LatLon, Stream,
    _this = this;

  LatLon = require("./LatLon.js");

  Stream = (function() {

    function Stream(tweetCounts, twitter, tokenizer, restartAfterSeconds) {
      var _this = this;
      this.tweetCounts = tweetCounts;
      this.twitter = twitter;
      this.tokenizer = tokenizer;
      if (restartAfterSeconds == null) {
        restartAfterSeconds = 30 * 60;
      }
      this.handleData = function(data) {
        return Stream.prototype.handleData.apply(_this, arguments);
      };
      this.restart = function() {
        return Stream.prototype.restart.apply(_this, arguments);
      };
      this.restartAfterMillis = restartAfterSeconds * 1000;
    }

    Stream.prototype.start = function() {
      var _this = this;
      return this.twitter.stream('statuses/sample', function(stream) {
        _this.stream = stream;
        console.log("Started listening for tweets, will restart after " + _this.restartAfterMillis + " millis");
        stream.on('data', _this.handleData);
        return setTimeout(_this.restart, _this.restartAfterMillis);
      });
    };

    Stream.prototype.restart = function() {
      if (this.stream != null) {
        console.log("Destroying stream");
        this.stream.destroy();
      }
      return this.start();
    };

    Stream.prototype.handleData = function(data) {
      if ((data.geo != null) && (data.geo.coordinates != null)) {
        return this.tweetCounts.add(new LatLon(data.geo.coordinates[0], data.geo.coordinates[1]), this.tokenizer.nGrams(data.text));
      }
    };

    return Stream;

  })();

  module.exports = Stream;

}).call(this);
