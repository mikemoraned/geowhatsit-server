// Generated by CoffeeScript 1.6.1
(function() {
  var LatLon, TweetCountsFactory, app, express, geohash, port, tweetCounts, _;

  express = require("express");

  app = express();

  app.use(express.logger());

  _ = require('underscore');

  geohash = require('ngeohash');

  LatLon = require("./lib/LatLon");

  TweetCountsFactory = require("./lib/TweetCountsFactory");

  tweetCounts = TweetCountsFactory.create(2);

  app.all('*', function(req, resp, next) {
    resp.header("Access-Control-Allow-Origin", "*");
    resp.header("Access-Control-Allow-Headers", "X-Requested-With");
    return next();
  });

  app.get('/', function(req, resp) {
    return resp.send('Hello World!');
  });

  app.get('/counts.json', function(req, resp) {
    return tweetCounts.dump(function(dumped) {
      return resp.send(dumped);
    });
  });

  app.get('/regions', function(req, resp) {
    return tweetCounts.regions(function(regionSummaries) {
      return resp.send(regionSummaries);
    });
  });

  app.get('/counts/grouped-by-geohash/precision-:precision.json', function(req, resp) {
    return tweetCounts.dump(function(dumped) {
      var byGeoHash, counts;
      byGeoHash = _.countBy(dumped.counts, function(entry) {
        return geohash.encode(entry.lat_lon.latitude, entry.lat_lon.longitude, req.params.precision);
      });
      counts = _.map(byGeoHash, function(count, encoded) {
        return {
          'lat_lon': geohash.decode(encoded),
          'count': count
        };
      });
      return resp.send({
        'total': dumped.total,
        'counts': counts
      });
    });
  });

  port = process.env.PORT || 5000;

  app.listen(port, function() {
    return console.log("Listening on " + port);
  });

}).call(this);
